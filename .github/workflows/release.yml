---
name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.6.1
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_SKIP: "cp27-* cp34-* pp* *win32"
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel liblapack-dev"
          CIBW_BEFORE_ALL_MACOS: "brew install openblas lapack"
          CIBW_BEFORE_BUILD_WINDOWS: "pip install -U numpy scipy"
          CIBW_TEST_COMMAND: "nosetests {project}/test"
          CIBW_TEST_REQUIRES: nose
          CIBW_ENVIRONMENT_WINDOWS: "BLAS_LAPACK_LIB_PATHS={project}/openblaslib CC=gcc USE_LAPACK=1"
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_wheels_windows:
    name: Build wheels on windows Python-${{ matrix.python-version }} ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}
      - name: Install OpenBLAS Windows
        shell: pwsh
        run: |
          $pyversion = python -c "import sys; print(sys.version.split()[0])"
          mkdir openblaslib
          Write-Host "Python Version: $pyversion"
          $target_name = "openblas.a"
          $target = "openblaslib\$target_name"
          Write-Host "target path: $target"
          $openblas = python tools/openblas_support.py
          cp $openblas $target
      - name: Install Visual C++ for Python 2.7
        run: |
          choco install vcpython27 -f -y
      - uses: msys2/setup-msys2@v2
        if: matrix.arch == 'x64'
        with:
          msystem: MINGW64
          install: git base-devel mingw-w64-x86_64-toolchain
      - uses: msys2/setup-msys2@v2
        if: matrix.arch == 'x86'
        with:
          msystem: MINGW32
          install: git base-devel mingw-w64-i686-toolchain
      - name: Build Wheel
        shell: msys2 {0}
        if: matrix.arch == 'x64'
        run: python setup.py install --scs 'CC="gcc.exe -m64" USE_LAPACK=1 BLASLDFLAGS="-Lopenblaslib -lopenblas"'
      - name: Build Wheel
        shell: msys2 {0}
        if: matrix.arch == 'x86'
        run: python setup.py install --scs 'CC="gcc.exe -m32" USE_LAPACK=1 BLASLDFLAGS="-Lopenblaslib -lopenblas"'
      - name: Run tests
        run: |
          set -e
          mkdir test_dir
          cd test_dir
          virtualenv test-env
          test-env/bin/pip install ../dist/*whl
          test-env/bin/pip install -U nose
          test-env/bin/nosetests ../tests
          cd ..
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
