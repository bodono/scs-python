[build-system]
build-backend = 'mesonpy'
requires = [
  "numpy >= 2.0.0; python_version > '3.8'",
  "oldest-supported-numpy; python_version <= '3.8'",
  "meson-python"
]

[project]
name = 'scs'
version = "3.2.7"
description = 'Splitting conic solver'
readme = 'README.md'
requires-python = '>=3.7'
license = {file = 'LICENSE'}
authors = [
  {name = "Brendan O'Donoghue", email = "bodonoghue85@gmail.com"}]
dependencies = [
   'numpy',
   'scipy',
]

[tool.cibuildwheel]
# Load SCS source submodule
before-all = "git submodule update --init"
skip = [
  "pp*", # Disable building PyPy wheels on all platforms
  "*manylinux*", # openblas not available, netlib blas+lapack compiles but super slow
  # work, to speed up testing:
  "*-win32",
  "cp37*",
  "cp38*",
  "cp39*",
  "cp310*",
  "cp311*",
  # "cp312*", 
]
# Test
test-requires = "pytest"
test-command = [
  "echo wheel installed successfully",
  "pytest {package}/test",
]

[tool.cibuildwheel.linux]
archs = [
  # these 3 are supported by conda
  # "x86_64",
  "aarch64",
  #"s390x", # haven't tried it
  # "i686", # fails on SCS tests, both on many and musl linux
  # "ppc64le", # haven't tried it
  # "armv7l", # haven't tried it
  ]

# Install from distribution repos
[[tool.cibuildwheel.overrides]]
select = "*-manylinux*"
inherit.before-all = "append"
before-all = [
  "yum check-update",
  "yum search blas", # look at what's available
  # netlib blas/lapack fallback compiles and tests but is super slow
  "((yum install -y openblas-devel) || (yum install -y blas-devel lapack-devel))"]

# Install from distribution repos
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
inherit.before-all = "append"
before-all = [
  "apk update",
  "apk search -v '*blas*'", # look at what's available
  "apk add openblas-dev"]

# # Install from choco repos
# [[tool.cibuildwheel.overrides]]
# select = "*-win*"
# inherit.before-all = "append"
# before-all = [
#   # "choco search blas", # look at what's available
#   "choco install pkgconfiglite"]

# [[tool.cibuildwheel.overrides]]
# select = "cp37*-win*"
# before-build = "conda install -y python=3.7"

# [[tool.cibuildwheel.overrides]]
# select = "cp38*-win*"
# before-build = "conda install -y python=3.8"

# [[tool.cibuildwheel.overrides]]
# select = "cp39*-win*"
# before-build = "conda install -y python=3.9"

# [[tool.cibuildwheel.overrides]]
# select = "cp310*-win*"
# before-build = "conda install -y python=3.10"

# [[tool.cibuildwheel.overrides]]
# select = "cp311*-win*"
# before-build = "conda install -y python=3.11"

# [[tool.cibuildwheel.overrides]]
# select = "cp312*-win*"
# before-build = "conda install -y python=3.12"

# [[tool.cibuildwheel.overrides]]
# select = "cp313*-win*"
# before-build = "conda install -y python=3.13"

# Gives libc compatibility error on conda initialization on aarch64
# # Install from conda otherwise
# [[tool.cibuildwheel.overrides]]
# select = [
#   "*linux_aarch64",
#   # "*linux_s390x"
#   ]
# inherit.before-all = "append"
# before-all = [
#   "mkdir -p ~/miniconda3",
#   "((yum install -y wget) || (apk add wget))",
#   "wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O ~/miniconda3/miniconda.sh",
#   "bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3",
#   "source ~/miniconda3/bin/activate",
#   "conda install -y openblas pkgconfig"
#   ]
