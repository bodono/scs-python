[build-system]
build-backend = 'mesonpy'
requires = [
  "numpy >= 2.0.0; python_version > '3.8'",
  "oldest-supported-numpy; python_version <= '3.8'",
  "meson-python"
]

[project]
name = 'scs'
version = "3.2.7"
description = 'Splitting conic solver'
readme = 'README.md'
requires-python = '>=3.7'
license = {file = 'LICENSE'}
authors = [
  {name = "Brendan O'Donoghue", email = "bodonoghue85@gmail.com"}]
dependencies = [
   'numpy',
   'scipy',
]

[tool.cibuildwheel]
# Load SCS source submodule, already done in CI/CD
before-all = "git submodule update --init"
skip = [
  "pp*", # Disable building PyPy wheels on all platforms
  # "*manylinux_aarch64*", # openblas not available, netlib blas+lapack compiles but super slow
  # "*musllinux_i686",
  # work, to speed up testing:
  "*-win32", # fails on locating Python headers, probably meson.build is misconfigured
  # for the following Scipy wheels are not available; probably BLAS issues
  "cp37*musllinux*",
  "cp38*musllinux*",
  "cp39*musllinux*",
  # no Scipy wheels for this
  "musllinux*aarch64"
]
# Test
test-requires = "pytest"
test-command = [
  "echo wheel installed successfully",
  "pytest {package}/test",
]
# we use the newer image for aarch64
manylinux-aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
archs = [
  # "x86_64",
  "aarch64",
  # "i686", # various issues, may work with some more testing
  # "s390x", # haven't tried it
  # "ppc64le", # haven't tried it
  # "armv7l", # haven't tried it
  ]

[tool.cibuildwheel.windows]
repair-wheel-command = [
  "pip install delvewheel",
  "delvewheel repair -w {dest_dir} {wheel}"
]

# Install from distribution repos
[[tool.cibuildwheel.overrides]]
select = "*-manylinux_x86_64"
inherit.before-all = "append"
before-all = [
  "yum check-update",
  "yum search blas", # look at what's available
  # netlib blas/lapack fallback compiles and tests (on aarch64) but is super slow
  "((yum install -y openblas-devel) || (yum install -y blas-devel lapack-devel))"]

# Install from distribution repos
[[tool.cibuildwheel.overrides]]
select = "*-manylinux_aarch64"
inherit.before-all = "append"
before-all = [
  "yum check-update",
  "yum search blas", # look at what's available
  # netlib blas/lapack fallback compiles and tests (on aarch64) but is super slow
  "((yum install -y openblas-devel) || (yum install -y blas-devel lapack-devel))"]

# Install from distribution repos
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
inherit.before-all = "append"
before-all = [
  "apk update",
  "apk search -v '*blas*'", # look at what's available
  "apk add openblas-dev"]


# Gives libc compatibility error on conda initialization on aarch64
# # Install from conda otherwise
# [[tool.cibuildwheel.overrides]]
# select = [
#   "*linux_aarch64",
#   # "*linux_s390x"
#   ]
# inherit.before-all = "append"
# before-all = [
#   "mkdir -p ~/miniconda3",
#   "((yum install -y wget) || (apk add wget))",
#   "wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh -O ~/miniconda3/miniconda.sh",
#   "bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3",
#   "source ~/miniconda3/bin/activate",
#   "conda install -y openblas pkgconfig"
#   ]
